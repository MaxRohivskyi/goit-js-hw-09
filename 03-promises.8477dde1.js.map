{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,kBAC9BE,KAAMH,SAASC,cAAc,iBAC7BG,OAAQJ,SAASC,cAAc,oBAGnBI,EAAwBP,EAAxBI,MAAOI,EAAiBR,EAAjBK,KAAMI,EAAWT,EAAXM,OA0B3B,SAASI,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUP,MAAAQ,IAEpBM,EAAO,CAAEP,WAAUP,MAAAQ,MAEpBA,MApC+BZ,EAA9BC,KAEHmB,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAEC,iBAMF,IAJA,IAAIC,EAAeC,OAAOjB,EAAMkB,OAC1BC,EAAcF,OAAOhB,EAAKiB,OAC1BE,EAAgBH,OAAOf,EAAOgB,OAE3BG,EAAI,EAAGA,GAAKD,EAAeC,GAAK,EACvClB,EAAckB,EAAGL,GACdM,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUoB,EAAKD,EAAL1B,MACjB4B,EAAAlC,GAASmC,OAAOC,QAAQ,uBAAwCC,OAAfxB,EAAS,QAAYwB,OAANJ,EAAM,QACpEK,QAAMC,IAAI,uBAAwCF,OAAfxB,EAAS,QAAYwB,OAANJ,EAAM,WAE3DO,OAAM,SAAAR,G,IAAGnB,EAAQmB,EAARnB,SAAU4B,EAAKT,EAAL1B,MAClB4B,EAAAlC,GAASmC,OAAOO,QAAQ,sBAAuCL,OAAfxB,EAAS,QAAYwB,OAANI,EAAM,QACnEH,QAAMC,IAAI,sBAAqCF,OAAfxB,EAAS,QAAYwB,OAANI,EAAM,WAG3DhB,GAAgBG,K","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport 'notiflix/dist/notiflix-3.2.5.min.css';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n};\n\nconst { form, delay, step, amount } = refs;\n\nform.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(e) {\n  e.preventDefault();\n\n  let enteredDelay = Number(delay.value);\n  const enteredStep = Number(step.value);\n  const enteredAmount = Number(amount.value);\n\n  for (let i = 1; i <= enteredAmount; i += 1) {\n    createPromise(i, enteredDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay} ms`);\n        console.log(`✅ Fulfilled promise ${position} in ${delay} ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay} ms`);\n        console.log(`❌ Rejected promise ${position} in ${delay} ms`);\n      });\n\n    enteredDelay += enteredStep;\n  };\n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay })\n      } else {\n        reject({ position, delay });\n      };\n    }, delay);\n  });\n}"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delay","step","amount","$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$createPromise","position","delay3","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","enteredDelay","Number","value","enteredStep","enteredAmount","i","then","param","delay1","$parcel$interopDefault","Notify","success","concat","console","log","catch","delay2","failure"],"version":3,"file":"03-promises.8477dde1.js.map"}